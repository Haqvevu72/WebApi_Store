// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.Persistence.Database;

#nullable disable

namespace Store.Persistence.Migrations
{
    [DbContext(typeof(StoreDb))]
    partial class StoreDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5410),
                            Description = "Devices and gadgets",
                            IsDeleted = false,
                            Name = "Electronics",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5410)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Printed and electronic books",
                            IsDeleted = false,
                            Name = "Books",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Men's and women's clothing",
                            IsDeleted = false,
                            Name = "Clothing",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Kitchen and home appliances",
                            IsDeleted = false,
                            Name = "Home Appliances",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Sporting goods and equipment",
                            IsDeleted = false,
                            Name = "Sports",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Toys and games for children",
                            IsDeleted = false,
                            Name = "Toys",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Beauty and personal care products",
                            IsDeleted = false,
                            Name = "Beauty",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Car parts and accessories",
                            IsDeleted = false,
                            Name = "Automotive",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Food and beverages",
                            IsDeleted = false,
                            Name = "Groceries",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420),
                            Description = "Home and office furniture",
                            IsDeleted = false,
                            Name = "Furniture",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5420)
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CashierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("QrCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Invoice_FK")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Invoice_FK");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("BarCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarCode = new Guid("10f00424-41b6-4e7b-b9e9-6469b895c198"),
                            Brand = "BrandA",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4770),
                            Description = "Latest model smartphone",
                            ExpireDate = new DateTime(2026, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4830),
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 699.99m,
                            StockQuantity = 50,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4780)
                        },
                        new
                        {
                            Id = 2,
                            BarCode = new Guid("f4c3f536-8254-4333-aa4a-cff7ded2b37a"),
                            Brand = "BrandB",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4880),
                            Description = "High performance laptop",
                            ExpireDate = new DateTime(2027, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4890),
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 999.99m,
                            StockQuantity = 30,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4880)
                        },
                        new
                        {
                            Id = 3,
                            BarCode = new Guid("11c1859b-f96f-49e6-803c-3cd46cc07406"),
                            Brand = "BrandC",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4890),
                            Description = "Noise cancelling headphones",
                            ExpireDate = new DateTime(2025, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4900),
                            IsDeleted = false,
                            Name = "Headphones",
                            Price = 199.99m,
                            StockQuantity = 100,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4890)
                        },
                        new
                        {
                            Id = 4,
                            BarCode = new Guid("161d0130-3722-4527-879d-b51a8ff6d036"),
                            Brand = "BrandD",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4900),
                            Description = "Energy efficient refrigerator",
                            ExpireDate = new DateTime(2029, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4910),
                            IsDeleted = false,
                            Name = "Refrigerator",
                            Price = 599.99m,
                            StockQuantity = 20,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4900)
                        },
                        new
                        {
                            Id = 5,
                            BarCode = new Guid("38f53792-f8ac-4f92-87af-6a188884773b"),
                            Brand = "BrandE",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4910),
                            Description = "Compact microwave oven",
                            ExpireDate = new DateTime(2028, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4920),
                            IsDeleted = false,
                            Name = "Microwave",
                            Price = 99.99m,
                            StockQuantity = 40,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4910)
                        },
                        new
                        {
                            Id = 6,
                            BarCode = new Guid("eb7c8cd5-ddd1-4d46-9e26-34ffca4dfc11"),
                            Brand = "BrandF",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4920),
                            Description = "Comfortable running shoes",
                            ExpireDate = new DateTime(2026, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4930),
                            IsDeleted = false,
                            Name = "Running Shoes",
                            Price = 49.99m,
                            StockQuantity = 70,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4920)
                        },
                        new
                        {
                            Id = 7,
                            BarCode = new Guid("73a4d56f-83bc-4bf8-bfe6-c70fec74f16d"),
                            Brand = "BrandG",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4930),
                            Description = "Foldable treadmill",
                            ExpireDate = new DateTime(2027, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4940),
                            IsDeleted = false,
                            Name = "Treadmill",
                            Price = 499.99m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4930)
                        },
                        new
                        {
                            Id = 8,
                            BarCode = new Guid("3d838bed-0a98-4109-8655-857b49b12726"),
                            Brand = "BrandH",
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4940),
                            Description = "Collectible action figure",
                            ExpireDate = new DateTime(2025, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4940),
                            IsDeleted = false,
                            Name = "Action Figure",
                            Price = 29.99m,
                            StockQuantity = 200,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4940)
                        },
                        new
                        {
                            Id = 9,
                            BarCode = new Guid("5a9e3efe-3f36-41e2-b8f6-32d43f2e4981"),
                            Brand = "BrandI",
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4950),
                            Description = "Fun family board game",
                            ExpireDate = new DateTime(2026, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4950),
                            IsDeleted = false,
                            Name = "Board Game",
                            Price = 39.99m,
                            StockQuantity = 60,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4950)
                        },
                        new
                        {
                            Id = 10,
                            BarCode = new Guid("c3f50eca-39d5-4490-b1bc-1a04b13359d7"),
                            Brand = "BrandJ",
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4960),
                            Description = "Long-lasting lipstick",
                            ExpireDate = new DateTime(2025, 12, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4960),
                            IsDeleted = false,
                            Name = "Lipstick",
                            Price = 9.99m,
                            StockQuantity = 150,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4960)
                        },
                        new
                        {
                            Id = 11,
                            BarCode = new Guid("5979c365-8fe5-476c-b325-7e93196ab99a"),
                            Brand = "BrandK",
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4970),
                            Description = "Hair strengthening shampoo",
                            ExpireDate = new DateTime(2025, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4970),
                            IsDeleted = false,
                            Name = "Shampoo",
                            Price = 5.99m,
                            StockQuantity = 80,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4970)
                        },
                        new
                        {
                            Id = 12,
                            BarCode = new Guid("d6eef7fa-0487-40d1-bbb0-4f38f6945fb7"),
                            Brand = "BrandL",
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4970),
                            Description = "Long-life car battery",
                            ExpireDate = new DateTime(2029, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4980),
                            IsDeleted = false,
                            Name = "Car Battery",
                            Price = 99.99m,
                            StockQuantity = 25,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4970)
                        },
                        new
                        {
                            Id = 13,
                            BarCode = new Guid("59881875-b418-4826-9c40-5380b7ada135"),
                            Brand = "BrandM",
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4980),
                            Description = "All-season tire",
                            ExpireDate = new DateTime(2030, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(4990),
                            IsDeleted = false,
                            Name = "Tire",
                            Price = 79.99m,
                            StockQuantity = 40,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4980)
                        },
                        new
                        {
                            Id = 14,
                            BarCode = new Guid("ab654376-7a1b-4044-93ee-45749d042123"),
                            Brand = "BrandN",
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4990),
                            Description = "Ground coffee",
                            ExpireDate = new DateTime(2024, 12, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5000),
                            IsDeleted = false,
                            Name = "Coffee",
                            Price = 7.99m,
                            StockQuantity = 100,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(4990)
                        },
                        new
                        {
                            Id = 15,
                            BarCode = new Guid("ab1b8273-dd1a-4cc6-99ec-8db80cba30a6"),
                            Brand = "BrandO",
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5000),
                            Description = "Breakfast cereal",
                            ExpireDate = new DateTime(2025, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5010),
                            IsDeleted = false,
                            Name = "Cereal",
                            Price = 3.99m,
                            StockQuantity = 150,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5000)
                        },
                        new
                        {
                            Id = 16,
                            BarCode = new Guid("d452dba8-664e-4105-93f2-d3f966c8379a"),
                            Brand = "BrandP",
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5010),
                            Description = "Ergonomic office chair",
                            ExpireDate = new DateTime(2034, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5020),
                            IsDeleted = false,
                            Name = "Office Chair",
                            Price = 149.99m,
                            StockQuantity = 20,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5010)
                        },
                        new
                        {
                            Id = 17,
                            BarCode = new Guid("04018484-e563-4935-818e-670fe5b54afa"),
                            Brand = "BrandQ",
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5020),
                            Description = "Wooden dining table",
                            ExpireDate = new DateTime(2039, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5020),
                            IsDeleted = false,
                            Name = "Dining Table",
                            Price = 299.99m,
                            StockQuantity = 15,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5020)
                        },
                        new
                        {
                            Id = 18,
                            BarCode = new Guid("efac6d5d-6236-4cc8-b6e1-501cdde8ef62"),
                            Brand = "BrandR",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5030),
                            Description = "Fitness tracking smart watch",
                            ExpireDate = new DateTime(2026, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5030),
                            IsDeleted = false,
                            Name = "Smart Watch",
                            Price = 199.99m,
                            StockQuantity = 35,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5030)
                        },
                        new
                        {
                            Id = 19,
                            BarCode = new Guid("142fc708-8e24-45aa-8acc-9bcd79f8e40a"),
                            Brand = "BrandS",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5040),
                            Description = "Portable e-book reader",
                            ExpireDate = new DateTime(2027, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5040),
                            IsDeleted = false,
                            Name = "E-book Reader",
                            Price = 129.99m,
                            StockQuantity = 50,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5040)
                        },
                        new
                        {
                            Id = 20,
                            BarCode = new Guid("26a8d0a2-e3aa-4f94-9bfc-0dff6b4e1b52"),
                            Brand = "BrandT",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5040),
                            Description = "Warm woolen sweater",
                            ExpireDate = new DateTime(2026, 6, 24, 14, 49, 58, 223, DateTimeKind.Local).AddTicks(5050),
                            IsDeleted = false,
                            Name = "Sweater",
                            Price = 49.99m,
                            StockQuantity = 60,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(5040)
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220),
                            Description = "SuperAdmin can do everything",
                            IsDeleted = false,
                            RoleType = 1,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220),
                            Description = "Admin",
                            IsDeleted = false,
                            RoleType = 2,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220),
                            Description = "Cashier",
                            IsDeleted = false,
                            RoleType = 4,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220),
                            Description = "Customer",
                            IsDeleted = false,
                            RoleType = 3,
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 225, DateTimeKind.Utc).AddTicks(5220)
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TokenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TokenId")
                        .IsUnique()
                        .HasFilter("[TokenId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6420),
                            Email = "john.doe@example.com",
                            IsDeleted = false,
                            Name = "John",
                            Password = "Password1",
                            RoleId = 2,
                            Surname = "Doe",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6420)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jane.smith@example.com",
                            IsDeleted = false,
                            Name = "Jane",
                            Password = "Password2",
                            RoleId = 3,
                            Surname = "Smith",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jim.beam@example.com",
                            IsDeleted = false,
                            Name = "Jim",
                            Password = "Password3",
                            RoleId = 4,
                            Surname = "Beam",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jack.daniels@example.com",
                            IsDeleted = false,
                            Name = "Jack",
                            Password = "Password4",
                            RoleId = 2,
                            Surname = "Daniels",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jill.valentine@example.com",
                            IsDeleted = false,
                            Name = "Jill",
                            Password = "Password5",
                            RoleId = 3,
                            Surname = "Valentine",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jake.gyllenhaal@example.com",
                            IsDeleted = false,
                            Name = "Jake",
                            Password = "Password6",
                            RoleId = 4,
                            Surname = "Gyllenhaal",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430),
                            Email = "jessica.jones@example.com",
                            IsDeleted = false,
                            Name = "Jessica",
                            Password = "Password7",
                            RoleId = 2,
                            Surname = "Jones",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6430)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "james.bond@example.com",
                            IsDeleted = false,
                            Name = "James",
                            Password = "Password8",
                            RoleId = 3,
                            Surname = "Bond",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "bruce.wayne@example.com",
                            IsDeleted = false,
                            Name = "Bruce",
                            Password = "Password9",
                            RoleId = 4,
                            Surname = "Wayne",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "clark.kent@example.com",
                            IsDeleted = false,
                            Name = "Clark",
                            Password = "Password10",
                            RoleId = 2,
                            Surname = "Kent",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "peter.parker@example.com",
                            IsDeleted = false,
                            Name = "Peter",
                            Password = "Password11",
                            RoleId = 3,
                            Surname = "Parker",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "tony.stark@example.com",
                            IsDeleted = false,
                            Name = "Tony",
                            Password = "Password12",
                            RoleId = 4,
                            Surname = "Stark",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "steve.rogers@example.com",
                            IsDeleted = false,
                            Name = "Steve",
                            Password = "Password13",
                            RoleId = 2,
                            Surname = "Rogers",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "natasha.romanoff@example.com",
                            IsDeleted = false,
                            Name = "Natasha",
                            Password = "Password14",
                            RoleId = 3,
                            Surname = "Romanoff",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "wanda.maximoff@example.com",
                            IsDeleted = false,
                            Name = "Wanda",
                            Password = "Password15",
                            RoleId = 4,
                            Surname = "Maximoff",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6440),
                            Email = "bruce.banner@example.com",
                            IsDeleted = false,
                            Name = "Bruce",
                            Password = "Password16",
                            RoleId = 2,
                            Surname = "Banner",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450),
                            Email = "stephen.strange@example.com",
                            IsDeleted = false,
                            Name = "Stephen",
                            Password = "Password17",
                            RoleId = 3,
                            Surname = "Strange",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450),
                            Email = "scott.lang@example.com",
                            IsDeleted = false,
                            Name = "Scott",
                            Password = "Password18",
                            RoleId = 4,
                            Surname = "Lang",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450),
                            Email = "sam.wilson@example.com",
                            IsDeleted = false,
                            Name = "Sam",
                            Password = "Password19",
                            RoleId = 2,
                            Surname = "Wilson",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450),
                            Email = "bucky.barnes@example.com",
                            IsDeleted = false,
                            Name = "Bucky",
                            Password = "Password20",
                            RoleId = 3,
                            Surname = "Barnes",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450),
                            Email = "Elgun02@gmail.com",
                            IsDeleted = false,
                            Name = "Elgun",
                            Password = "Elgun123",
                            RoleId = 1,
                            Surname = "Haqverdiyev",
                            UpdatedAt = new DateTime(2024, 6, 24, 10, 49, 58, 223, DateTimeKind.Utc).AddTicks(6450)
                        });
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Invoice", b =>
                {
                    b.HasOne("Store.Domain.Entities.Concrete.User", "Cashier")
                        .WithMany("CashierInvoices")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Concrete.User", "Customer")
                        .WithMany("CustomerInvoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cashier");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.InvoiceItem", b =>
                {
                    b.HasOne("Store.Domain.Entities.Concrete.Invoice", null)
                        .WithMany("InvoiceItems")
                        .HasForeignKey("Invoice_FK");

                    b.HasOne("Store.Domain.Entities.Concrete.Product", "Product")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Store.Domain.Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.User", b =>
                {
                    b.HasOne("Store.Domain.Entities.Concrete.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store.Domain.Entities.Concrete.UserToken", "Token")
                        .WithOne("User")
                        .HasForeignKey("Store.Domain.Entities.Concrete.User", "TokenId");

                    b.Navigation("Role");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Product", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.User", b =>
                {
                    b.Navigation("CashierInvoices");

                    b.Navigation("CustomerInvoices");
                });

            modelBuilder.Entity("Store.Domain.Entities.Concrete.UserToken", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
